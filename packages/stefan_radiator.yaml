homeassistant:
  customize:
    switch.stefan_radiator:
      icon: mdi:radiator
# switch:
#   - platform: rest
#     name: Stefan Radiator Api
#     resource: !secret radiator_api
#     body_on: '{"state": "on"}'
#     body_off: '{"state": "off"}'
    # is_on_template: '{{value_json.state}}'
switch:
  - platform: mqtt
    name: "Stefan Radiator"
    state_topic: "home/stefan/radiator/set"
    command_topic: "home/stefan/radiator/set"
    # availability_topic: "home/bedroom/switch1/available"
    payload_on: "on"
    payload_off: "off"
    optimistic: false
    qos: 0

automation:
  - alias: '[House] Radiator failed'
    initial_state: 'on'
    trigger:
      platform: mqtt
      topic: "home/stefan/radiator/failed"
      payload: 'Failed'
    condition:
      - condition: template
        value_template: >
          {% if states.automation.radiator_failed_to_turn_on.last_triggered is not none %}
            {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.radiator_failed_to_turn_on.attributes.last_triggered) | int > 60 %} true {% else %} false
            {% endif %}
          {% else %}
          false
          {% endif %}
    action:
      - service: notify.ios_isabellas_iphone_x
        data_template:
          title: 'Radiator'
          message: 'Failed to turn on, try again'
      - service: notify.ios_stefan_iphone_7
        data:
          title: 'Radiator'
          message: 'Failed to turn on, try again'
      - service: switch.turn_off
        entity_id: switch.stefan_radiator_3
        
  - alias: '[House] Radiator turn on'
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: switch.stefan_radiator_3
      to: 'on'
      for:
        minutes: 5
    action:
      - service: switch.turn_off
        entity_id: switch.stefan_radiator